syntax = "proto3";

option go_package = "github.com/bognar-dev/auction";
option java_multiple_files = true;
option java_package = "io.grpc.examples.acutionhouse";
option java_outer_classname = "RouteGuideProto";

package auctionhouse;

enum AuctionType {
  ENGLISH = 0;
  DUTCH = 1;
  VICKREY = 2;
  YANKEE = 3;
}

enum LotStatus {
  OPEN = 0;
  CLOSED = 1;
}

enum UserType {
  SELLER = 0;
  BUYER = 1;
}

// Service for listing lots
service ListingService {
  // Adds a lot to the auction house.
  rpc AddLot(lot) returns (lot) {}
}

// Service for viewing lots
service ViewingService {
  // Lists all the lots in the auction house.
  rpc ListLots(Empty) returns (stream lot) {}
  // Lists all the lots in the auction house by type
  rpc ListLotsByType(AuctionTypeRequest) returns (stream lot) {}
  // Lists all the lots in the auction house by status
  rpc ListLotsByStatus(LotStatusRequest) returns (stream lot) {}
  // Lists all the lots in the auction house by user
  rpc ListLotsByUser(User) returns (stream lot) {}
  //get a constant stream of one lot
  rpc GetLot(lot) returns (stream lot) {}
}

// Service for submitting bids
service BidSubmitService {
  // Bids on a lot.
  rpc Bid(BidRequest) returns (lot) {}
}

// Service for viewing bids
service BidViewingService {
  // TODO: Define RPC methods for viewing bids
}

message LotStatusRequest {
  LotStatus status = 1;
}

message AuctionTypeRequest {
  AuctionType auctionType = 1;
}

message Empty {}

message BidRequest {
  lot lot = 1;
  int32 price = 2;
}

message lot {
  string name = 1;
  string description = 2;
  double startPrice = 3;
  double currentPrice = 4;
  User seller = 5;
  User buyer = 6;
  AuctionType auctionType = 7;
  LotStatus status = 8;
}

message User {
  string name = 1;
  string email = 2;
  string password = 3;
  UserType userType = 4;
}