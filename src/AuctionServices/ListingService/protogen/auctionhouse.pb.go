// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0--rc2
// source: auctionhouse.proto

package auction

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuctionType int32

const (
	AuctionType_ENGLISH AuctionType = 0
	AuctionType_DUTCH   AuctionType = 1
	AuctionType_VICKREY AuctionType = 2
	AuctionType_YANKEE  AuctionType = 3
)

// Enum value maps for AuctionType.
var (
	AuctionType_name = map[int32]string{
		0: "ENGLISH",
		1: "DUTCH",
		2: "VICKREY",
		3: "YANKEE",
	}
	AuctionType_value = map[string]int32{
		"ENGLISH": 0,
		"DUTCH":   1,
		"VICKREY": 2,
		"YANKEE":  3,
	}
)

func (x AuctionType) Enum() *AuctionType {
	p := new(AuctionType)
	*p = x
	return p
}

func (x AuctionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuctionType) Descriptor() protoreflect.EnumDescriptor {
	return file_auctionhouse_proto_enumTypes[0].Descriptor()
}

func (AuctionType) Type() protoreflect.EnumType {
	return &file_auctionhouse_proto_enumTypes[0]
}

func (x AuctionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuctionType.Descriptor instead.
func (AuctionType) EnumDescriptor() ([]byte, []int) {
	return file_auctionhouse_proto_rawDescGZIP(), []int{0}
}

type LotStatus int32

const (
	LotStatus_OPEN   LotStatus = 0
	LotStatus_CLOSED LotStatus = 1
)

// Enum value maps for LotStatus.
var (
	LotStatus_name = map[int32]string{
		0: "OPEN",
		1: "CLOSED",
	}
	LotStatus_value = map[string]int32{
		"OPEN":   0,
		"CLOSED": 1,
	}
)

func (x LotStatus) Enum() *LotStatus {
	p := new(LotStatus)
	*p = x
	return p
}

func (x LotStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LotStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_auctionhouse_proto_enumTypes[1].Descriptor()
}

func (LotStatus) Type() protoreflect.EnumType {
	return &file_auctionhouse_proto_enumTypes[1]
}

func (x LotStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LotStatus.Descriptor instead.
func (LotStatus) EnumDescriptor() ([]byte, []int) {
	return file_auctionhouse_proto_rawDescGZIP(), []int{1}
}

type UserType int32

const (
	UserType_SELLER UserType = 0
	UserType_BUYER  UserType = 1
)

// Enum value maps for UserType.
var (
	UserType_name = map[int32]string{
		0: "SELLER",
		1: "BUYER",
	}
	UserType_value = map[string]int32{
		"SELLER": 0,
		"BUYER":  1,
	}
)

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_auctionhouse_proto_enumTypes[2].Descriptor()
}

func (UserType) Type() protoreflect.EnumType {
	return &file_auctionhouse_proto_enumTypes[2]
}

func (x UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserType.Descriptor instead.
func (UserType) EnumDescriptor() ([]byte, []int) {
	return file_auctionhouse_proto_rawDescGZIP(), []int{2}
}

type LotStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status LotStatus `protobuf:"varint,1,opt,name=status,proto3,enum=auctionhouse.LotStatus" json:"status,omitempty"`
}

func (x *LotStatusRequest) Reset() {
	*x = LotStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auctionhouse_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotStatusRequest) ProtoMessage() {}

func (x *LotStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auctionhouse_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotStatusRequest.ProtoReflect.Descriptor instead.
func (*LotStatusRequest) Descriptor() ([]byte, []int) {
	return file_auctionhouse_proto_rawDescGZIP(), []int{0}
}

func (x *LotStatusRequest) GetStatus() LotStatus {
	if x != nil {
		return x.Status
	}
	return LotStatus_OPEN
}

type AuctionTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionType AuctionType `protobuf:"varint,1,opt,name=auctionType,proto3,enum=auctionhouse.AuctionType" json:"auctionType,omitempty"`
}

func (x *AuctionTypeRequest) Reset() {
	*x = AuctionTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auctionhouse_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionTypeRequest) ProtoMessage() {}

func (x *AuctionTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auctionhouse_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionTypeRequest.ProtoReflect.Descriptor instead.
func (*AuctionTypeRequest) Descriptor() ([]byte, []int) {
	return file_auctionhouse_proto_rawDescGZIP(), []int{1}
}

func (x *AuctionTypeRequest) GetAuctionType() AuctionType {
	if x != nil {
		return x.AuctionType
	}
	return AuctionType_ENGLISH
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auctionhouse_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_auctionhouse_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_auctionhouse_proto_rawDescGZIP(), []int{2}
}

type BidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lot   *Lot  `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	Price int32 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *BidRequest) Reset() {
	*x = BidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auctionhouse_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidRequest) ProtoMessage() {}

func (x *BidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auctionhouse_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidRequest.ProtoReflect.Descriptor instead.
func (*BidRequest) Descriptor() ([]byte, []int) {
	return file_auctionhouse_proto_rawDescGZIP(), []int{3}
}

func (x *BidRequest) GetLot() *Lot {
	if x != nil {
		return x.Lot
	}
	return nil
}

func (x *BidRequest) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Lot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description  string      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	StartPrice   float64     `protobuf:"fixed64,3,opt,name=startPrice,proto3" json:"startPrice,omitempty"`
	CurrentPrice float64     `protobuf:"fixed64,4,opt,name=currentPrice,proto3" json:"currentPrice,omitempty"`
	Seller       *User       `protobuf:"bytes,5,opt,name=seller,proto3" json:"seller,omitempty"`
	Buyer        *User       `protobuf:"bytes,6,opt,name=buyer,proto3" json:"buyer,omitempty"`
	AuctionType  AuctionType `protobuf:"varint,7,opt,name=auctionType,proto3,enum=auctionhouse.AuctionType" json:"auctionType,omitempty"`
	Status       LotStatus   `protobuf:"varint,8,opt,name=status,proto3,enum=auctionhouse.LotStatus" json:"status,omitempty"`
}

func (x *Lot) Reset() {
	*x = Lot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auctionhouse_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lot) ProtoMessage() {}

func (x *Lot) ProtoReflect() protoreflect.Message {
	mi := &file_auctionhouse_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lot.ProtoReflect.Descriptor instead.
func (*Lot) Descriptor() ([]byte, []int) {
	return file_auctionhouse_proto_rawDescGZIP(), []int{4}
}

func (x *Lot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lot) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Lot) GetStartPrice() float64 {
	if x != nil {
		return x.StartPrice
	}
	return 0
}

func (x *Lot) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *Lot) GetSeller() *User {
	if x != nil {
		return x.Seller
	}
	return nil
}

func (x *Lot) GetBuyer() *User {
	if x != nil {
		return x.Buyer
	}
	return nil
}

func (x *Lot) GetAuctionType() AuctionType {
	if x != nil {
		return x.AuctionType
	}
	return AuctionType_ENGLISH
}

func (x *Lot) GetStatus() LotStatus {
	if x != nil {
		return x.Status
	}
	return LotStatus_OPEN
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email    string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	UserType UserType `protobuf:"varint,4,opt,name=userType,proto3,enum=auctionhouse.UserType" json:"userType,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auctionhouse_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_auctionhouse_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_auctionhouse_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetUserType() UserType {
	if x != nil {
		return x.UserType
	}
	return UserType_SELLER
}

var File_auctionhouse_proto protoreflect.FileDescriptor

var file_auctionhouse_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x22, 0x43, 0x0a, 0x10, 0x4c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x12, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x0b, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x47, 0x0a, 0x0a, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x03, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x6c, 0x6f,
	0x74, 0x52, 0x03, 0x6c, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xc3, 0x02, 0x0a,
	0x03, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x4c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x32, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x3e, 0x0a, 0x0b, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x47, 0x4c, 0x49, 0x53, 0x48, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x55, 0x54, 0x43, 0x48, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x56, 0x49, 0x43, 0x4b, 0x52, 0x45, 0x59, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x41, 0x4e,
	0x4b, 0x45, 0x45, 0x10, 0x03, 0x2a, 0x21, 0x0a, 0x09, 0x4c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x21, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x4c, 0x4c, 0x45, 0x52, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x55, 0x59, 0x45, 0x52, 0x10, 0x01, 0x32, 0x42, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a,
	0x06, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x74, 0x12, 0x11, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x6c, 0x6f, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x6c, 0x6f, 0x74, 0x22, 0x00, 0x32,
	0xcf, 0x02, 0x0a, 0x0e, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x74, 0x73, 0x12, 0x13,
	0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x6c, 0x6f, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x2e, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x6c, 0x6f,
	0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x74,
	0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x6c, 0x6f, 0x74, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x3b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x12, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x6c, 0x6f, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x32, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x74, 0x12, 0x11, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x6c, 0x6f, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x6c, 0x6f, 0x74, 0x22, 0x00, 0x30,
	0x01, 0x32, 0x48, 0x0a, 0x10, 0x42, 0x69, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x03, 0x42, 0x69, 0x64, 0x12, 0x18, 0x2e, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x42, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x6c, 0x6f, 0x74, 0x22, 0x00, 0x32, 0x13, 0x0a, 0x11, 0x42,
	0x69, 0x64, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x51, 0x0a, 0x1d, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x42, 0x0f, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x6f, 0x67, 0x6e, 0x61, 0x72, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auctionhouse_proto_rawDescOnce sync.Once
	file_auctionhouse_proto_rawDescData = file_auctionhouse_proto_rawDesc
)

func file_auctionhouse_proto_rawDescGZIP() []byte {
	file_auctionhouse_proto_rawDescOnce.Do(func() {
		file_auctionhouse_proto_rawDescData = protoimpl.X.CompressGZIP(file_auctionhouse_proto_rawDescData)
	})
	return file_auctionhouse_proto_rawDescData
}

var file_auctionhouse_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_auctionhouse_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_auctionhouse_proto_goTypes = []interface{}{
	(AuctionType)(0),           // 0: auctionhouse.AuctionType
	(LotStatus)(0),             // 1: auctionhouse.LotStatus
	(UserType)(0),              // 2: auctionhouse.UserType
	(*LotStatusRequest)(nil),   // 3: auctionhouse.LotStatusRequest
	(*AuctionTypeRequest)(nil), // 4: auctionhouse.AuctionTypeRequest
	(*Empty)(nil),              // 5: auctionhouse.Empty
	(*BidRequest)(nil),         // 6: auctionhouse.BidRequest
	(*Lot)(nil),                // 7: auctionhouse.lot
	(*User)(nil),               // 8: auctionhouse.User
}
var file_auctionhouse_proto_depIdxs = []int32{
	1,  // 0: auctionhouse.LotStatusRequest.status:type_name -> auctionhouse.LotStatus
	0,  // 1: auctionhouse.AuctionTypeRequest.auctionType:type_name -> auctionhouse.AuctionType
	7,  // 2: auctionhouse.BidRequest.lot:type_name -> auctionhouse.lot
	8,  // 3: auctionhouse.lot.seller:type_name -> auctionhouse.User
	8,  // 4: auctionhouse.lot.buyer:type_name -> auctionhouse.User
	0,  // 5: auctionhouse.lot.auctionType:type_name -> auctionhouse.AuctionType
	1,  // 6: auctionhouse.lot.status:type_name -> auctionhouse.LotStatus
	2,  // 7: auctionhouse.User.userType:type_name -> auctionhouse.UserType
	7,  // 8: auctionhouse.ListingService.AddLot:input_type -> auctionhouse.lot
	5,  // 9: auctionhouse.ViewingService.ListLots:input_type -> auctionhouse.Empty
	4,  // 10: auctionhouse.ViewingService.ListLotsByType:input_type -> auctionhouse.AuctionTypeRequest
	3,  // 11: auctionhouse.ViewingService.ListLotsByStatus:input_type -> auctionhouse.LotStatusRequest
	8,  // 12: auctionhouse.ViewingService.ListLotsByUser:input_type -> auctionhouse.User
	7,  // 13: auctionhouse.ViewingService.GetLot:input_type -> auctionhouse.lot
	6,  // 14: auctionhouse.BidSubmitService.Bid:input_type -> auctionhouse.BidRequest
	7,  // 15: auctionhouse.ListingService.AddLot:output_type -> auctionhouse.lot
	7,  // 16: auctionhouse.ViewingService.ListLots:output_type -> auctionhouse.lot
	7,  // 17: auctionhouse.ViewingService.ListLotsByType:output_type -> auctionhouse.lot
	7,  // 18: auctionhouse.ViewingService.ListLotsByStatus:output_type -> auctionhouse.lot
	7,  // 19: auctionhouse.ViewingService.ListLotsByUser:output_type -> auctionhouse.lot
	7,  // 20: auctionhouse.ViewingService.GetLot:output_type -> auctionhouse.lot
	7,  // 21: auctionhouse.BidSubmitService.Bid:output_type -> auctionhouse.lot
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_auctionhouse_proto_init() }
func file_auctionhouse_proto_init() {
	if File_auctionhouse_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auctionhouse_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auctionhouse_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auctionhouse_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auctionhouse_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auctionhouse_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auctionhouse_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auctionhouse_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_auctionhouse_proto_goTypes,
		DependencyIndexes: file_auctionhouse_proto_depIdxs,
		EnumInfos:         file_auctionhouse_proto_enumTypes,
		MessageInfos:      file_auctionhouse_proto_msgTypes,
	}.Build()
	File_auctionhouse_proto = out.File
	file_auctionhouse_proto_rawDesc = nil
	file_auctionhouse_proto_goTypes = nil
	file_auctionhouse_proto_depIdxs = nil
}
